{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _excluded = [\"emoji\", \"colSize\"],\n  _excluded2 = [\"theme\", \"columns\", \"placeholder\", \"showHistory\", \"showSearchBar\", \"showSectionTitles\", \"showTabs\"];\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport emoji from \"emoji-datasource\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport var Categories = {\n  all: {\n    symbol: null,\n    name: \"All\"\n  },\n  history: {\n    symbol: \"🕘\",\n    name: \"Recently used\"\n  },\n  emotion: {\n    symbol: \"😀\",\n    name: \"Smileys & Emotion\"\n  },\n  people: {\n    symbol: \"🧑\",\n    name: \"People & Body\"\n  },\n  nature: {\n    symbol: \"🦄\",\n    name: \"Animals & Nature\"\n  },\n  food: {\n    symbol: \"🍔\",\n    name: \"Food & Drink\"\n  },\n  activities: {\n    symbol: \"⚾️\",\n    name: \"Activities\"\n  },\n  places: {\n    symbol: \"✈️\",\n    name: \"Travel & Places\"\n  },\n  objects: {\n    symbol: \"💡\",\n    name: \"Objects\"\n  },\n  symbols: {\n    symbol: \"🔣\",\n    name: \"Symbols\"\n  },\n  flags: {\n    symbol: \"🏳️‍🌈\",\n    name: \"Flags\"\n  }\n};\nvar charFromUtf16 = function charFromUtf16(utf16) {\n  return String.fromCodePoint.apply(String, _toConsumableArray(utf16.split(\"-\").map(function (u) {\n    return \"0x\" + u;\n  })));\n};\nexport var charFromEmojiObject = function charFromEmojiObject(obj) {\n  return charFromUtf16(obj.unified);\n};\nvar filteredEmojis = emoji.filter(function (e) {\n  return !e[\"obsoleted_by\"];\n});\nvar emojiByCategory = function emojiByCategory(category) {\n  return filteredEmojis.filter(function (e) {\n    return e.category === category;\n  });\n};\nvar sortEmoji = function sortEmoji(list) {\n  return list.sort(function (a, b) {\n    return a.sort_order - b.sort_order;\n  });\n};\nvar categoryKeys = Object.keys(Categories);\nvar TabBar = function TabBar(_ref) {\n  var theme = _ref.theme,\n    activeCategory = _ref.activeCategory,\n    _onPress = _ref.onPress,\n    width = _ref.width;\n  var tabSize = width / categoryKeys.length;\n  return categoryKeys.map(function (c) {\n    var category = Categories[c];\n    if (c !== \"all\") return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        return _onPress(category);\n      },\n      style: {\n        flex: 1,\n        height: tabSize,\n        borderColor: category === activeCategory ? theme : \"#EEEEEE\",\n        borderBottomWidth: 2,\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      children: _jsx(Text, {\n        style: {\n          textAlign: \"center\",\n          paddingBottom: 8,\n          fontSize: tabSize - 24\n        },\n        children: category.symbol\n      })\n    }, category.name);\n  });\n};\nvar EmojiCell = function EmojiCell(_ref2) {\n  var emoji = _ref2.emoji,\n    colSize = _ref2.colSize,\n    other = _objectWithoutProperties(_ref2, _excluded);\n  return _jsx(TouchableOpacity, _objectSpread(_objectSpread({\n    activeOpacity: 0.5,\n    style: {\n      width: colSize,\n      height: colSize,\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    }\n  }, other), {}, {\n    children: _jsx(Text, {\n      style: {\n        color: \"#FFFFFF\",\n        fontSize: colSize - 12\n      },\n      children: charFromEmojiObject(emoji)\n    })\n  }));\n};\nvar storage_key = \"@react-native-emoji-selector:HISTORY\";\nvar EmojiSelector = function (_Component) {\n  _inherits(EmojiSelector, _Component);\n  var _super = _createSuper(EmojiSelector);\n  function EmojiSelector() {\n    var _this;\n    _classCallCheck(this, EmojiSelector);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      searchQuery: \"\",\n      category: Categories.people,\n      isReady: false,\n      history: [],\n      emojiList: null,\n      colSize: 0,\n      width: 0\n    };\n    _this.handleTabSelect = function (category) {\n      if (_this.state.isReady) {\n        if (_this.scrollview) _this.scrollview.scrollToOffset({\n          x: 0,\n          y: 0,\n          animated: false\n        });\n        _this.setState({\n          searchQuery: \"\",\n          category: category\n        });\n      }\n    };\n    _this.handleEmojiSelect = function (emoji) {\n      if (_this.props.showHistory) {\n        _this.addToHistoryAsync(emoji);\n      }\n      _this.props.onEmojiSelected(charFromEmojiObject(emoji));\n    };\n    _this.handleSearch = function (searchQuery) {\n      _this.setState({\n        searchQuery: searchQuery\n      });\n    };\n    _this.addToHistoryAsync = function () {\n      var _ref3 = _asyncToGenerator(function* (emoji) {\n        var history = yield AsyncStorage.getItem(storage_key);\n        var value = [];\n        if (!history) {\n          var record = Object.assign({}, emoji, {\n            count: 1\n          });\n          value.push(record);\n        } else {\n          var json = JSON.parse(history);\n          if (json.filter(function (r) {\n            return r.unified === emoji.unified;\n          }).length > 0) {\n            value = json;\n          } else {\n            var _record = Object.assign({}, emoji, {\n              count: 1\n            });\n            value = [_record].concat(_toConsumableArray(json));\n          }\n        }\n        AsyncStorage.setItem(storage_key, JSON.stringify(value));\n        _this.setState({\n          history: value\n        });\n      });\n      return function (_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    _this.loadHistoryAsync = _asyncToGenerator(function* () {\n      var result = yield AsyncStorage.getItem(storage_key);\n      if (result) {\n        var history = JSON.parse(result);\n        _this.setState({\n          history: history\n        });\n      }\n    });\n    _this.renderEmojiCell = function (_ref5) {\n      var item = _ref5.item;\n      return _jsx(EmojiCell, {\n        emoji: item.emoji,\n        onPress: function onPress() {\n          return _this.handleEmojiSelect(item.emoji);\n        },\n        colSize: _this.state.colSize\n      }, item.key);\n    };\n    _this.handleLayout = function (_ref6) {\n      var layout = _ref6.nativeEvent.layout;\n      _this.setState({\n        width: layout.width\n      }, function () {\n        _this.prerenderEmojis(function () {\n          _this.setState({\n            isReady: true\n          });\n        });\n      });\n    };\n    return _this;\n  }\n  _createClass(EmojiSelector, [{\n    key: \"returnSectionData\",\n    value: function returnSectionData() {\n      var _this2 = this;\n      var _this$state = this.state,\n        history = _this$state.history,\n        emojiList = _this$state.emojiList,\n        searchQuery = _this$state.searchQuery,\n        category = _this$state.category;\n      var emojiData = function () {\n        if (category === Categories.all && searchQuery === \"\") {\n          var largeList = [];\n          categoryKeys.forEach(function (c) {\n            var name = Categories[c].name;\n            var list = name === Categories.history.name ? history : emojiList[name];\n            if (c !== \"all\" && c !== \"history\") largeList = largeList.concat(list);\n          });\n          return largeList.map(function (emoji) {\n            return {\n              key: emoji.unified,\n              emoji: emoji\n            };\n          });\n        } else {\n          var list;\n          var hasSearchQuery = searchQuery !== \"\";\n          var name = category.name;\n          if (hasSearchQuery) {\n            var filtered = emoji.filter(function (e) {\n              var display = false;\n              e.short_names.forEach(function (name) {\n                if (name.includes(searchQuery.toLowerCase())) display = true;\n              });\n              return display;\n            });\n            list = sortEmoji(filtered);\n          } else if (name === Categories.history.name) {\n            list = history;\n          } else {\n            list = emojiList[name];\n          }\n          return list.map(function (emoji) {\n            return {\n              key: emoji.unified,\n              emoji: emoji\n            };\n          });\n        }\n      }();\n      return this.props.shouldInclude ? emojiData.filter(function (e) {\n        return _this2.props.shouldInclude(e.emoji);\n      }) : emojiData;\n    }\n  }, {\n    key: \"prerenderEmojis\",\n    value: function prerenderEmojis(callback) {\n      var emojiList = {};\n      categoryKeys.forEach(function (c) {\n        var name = Categories[c].name;\n        emojiList[name] = sortEmoji(emojiByCategory(name));\n      });\n      this.setState({\n        emojiList: emojiList,\n        colSize: Math.floor(this.state.width / this.props.columns)\n      }, callback);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n        category = _this$props.category,\n        showHistory = _this$props.showHistory;\n      this.setState({\n        category: category\n      });\n      if (showHistory) {\n        this.loadHistoryAsync();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var _this$props2 = this.props,\n        theme = _this$props2.theme,\n        columns = _this$props2.columns,\n        placeholder = _this$props2.placeholder,\n        showHistory = _this$props2.showHistory,\n        showSearchBar = _this$props2.showSearchBar,\n        showSectionTitles = _this$props2.showSectionTitles,\n        showTabs = _this$props2.showTabs,\n        other = _objectWithoutProperties(_this$props2, _excluded2);\n      var _this$state2 = this.state,\n        category = _this$state2.category,\n        colSize = _this$state2.colSize,\n        isReady = _this$state2.isReady,\n        searchQuery = _this$state2.searchQuery;\n      var Searchbar = _jsx(View, {\n        style: styles.searchbar_container,\n        children: _jsx(TextInput, {\n          style: styles.search,\n          placeholder: placeholder,\n          clearButtonMode: \"always\",\n          returnKeyType: \"done\",\n          autoCorrect: false,\n          underlineColorAndroid: theme,\n          value: searchQuery,\n          onChangeText: this.handleSearch\n        })\n      });\n      var title = searchQuery !== \"\" ? \"Search Results\" : category.name;\n      return _jsxs(View, _objectSpread(_objectSpread({\n        style: styles.frame\n      }, other), {}, {\n        onLayout: this.handleLayout,\n        children: [_jsx(View, {\n          style: styles.tabBar,\n          children: showTabs && _jsx(TabBar, {\n            activeCategory: category,\n            onPress: this.handleTabSelect,\n            theme: theme,\n            width: this.state.width\n          })\n        }), _jsxs(View, {\n          style: {\n            flex: 1\n          },\n          children: [showSearchBar && Searchbar, isReady ? _jsx(View, {\n            style: {\n              flex: 1\n            },\n            children: _jsxs(View, {\n              style: styles.container,\n              children: [showSectionTitles && _jsx(Text, {\n                style: styles.sectionHeader,\n                children: title\n              }), _jsx(FlatList, {\n                style: styles.scrollview,\n                contentContainerStyle: {\n                  paddingBottom: colSize\n                },\n                data: this.returnSectionData(),\n                renderItem: this.renderEmojiCell,\n                horizontal: false,\n                numColumns: columns,\n                keyboardShouldPersistTaps: \"always\",\n                ref: function ref(scrollview) {\n                  return _this3.scrollview = scrollview;\n                },\n                removeClippedSubviews: true\n              })]\n            })\n          }) : _jsx(View, _objectSpread(_objectSpread({\n            style: styles.loader\n          }, other), {}, {\n            children: _jsx(ActivityIndicator, {\n              size: \"large\",\n              color: Platform.OS === \"android\" ? theme : \"#000000\"\n            })\n          }))]\n        })]\n      }));\n    }\n  }]);\n  return EmojiSelector;\n}(Component);\nexport { EmojiSelector as default };\nEmojiSelector.defaultProps = {\n  theme: \"#007AFF\",\n  category: Categories.all,\n  showTabs: true,\n  showSearchBar: true,\n  showHistory: false,\n  showSectionTitles: true,\n  columns: 6,\n  placeholder: \"Search...\"\n};\nvar styles = StyleSheet.create({\n  frame: {\n    flex: 1,\n    width: \"100%\"\n  },\n  loader: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  tabBar: {\n    flexDirection: \"row\"\n  },\n  scrollview: {\n    flex: 1\n  },\n  searchbar_container: {\n    width: \"100%\",\n    zIndex: 1,\n    backgroundColor: \"rgba(255,255,255,0.75)\"\n  },\n  search: _objectSpread(_objectSpread({}, Platform.select({\n    ios: {\n      height: 36,\n      paddingLeft: 8,\n      borderRadius: 10,\n      backgroundColor: \"#E5E8E9\"\n    }\n  })), {}, {\n    margin: 8\n  }),\n  container: {\n    flex: 1,\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    alignItems: \"flex-start\"\n  },\n  sectionHeader: {\n    margin: 8,\n    fontSize: 17,\n    width: \"100%\",\n    color: \"#8F8F8F\"\n  }\n});","map":{"version":3,"names":["React","Component","View","Text","StyleSheet","TouchableOpacity","TextInput","Platform","ActivityIndicator","FlatList","emoji","AsyncStorage","jsx","_jsx","jsxs","_jsxs","Categories","all","symbol","name","history","emotion","people","nature","food","activities","places","objects","symbols","flags","charFromUtf16","utf16","String","fromCodePoint","apply","_toConsumableArray","split","map","u","charFromEmojiObject","obj","unified","filteredEmojis","filter","e","emojiByCategory","category","sortEmoji","list","sort","a","b","sort_order","categoryKeys","Object","keys","TabBar","_ref","theme","activeCategory","onPress","width","tabSize","length","c","style","flex","height","borderColor","borderBottomWidth","alignItems","justifyContent","children","textAlign","paddingBottom","fontSize","EmojiCell","_ref2","colSize","other","_objectWithoutProperties","_excluded","_objectSpread","activeOpacity","color","storage_key","EmojiSelector","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","args","Array","_key","call","concat","state","searchQuery","isReady","emojiList","handleTabSelect","scrollview","scrollToOffset","x","y","animated","setState","handleEmojiSelect","props","showHistory","addToHistoryAsync","onEmojiSelected","handleSearch","_ref3","_asyncToGenerator","getItem","value","record","assign","count","push","json","JSON","parse","r","setItem","stringify","_x","loadHistoryAsync","result","renderEmojiCell","_ref5","item","key","handleLayout","_ref6","layout","nativeEvent","prerenderEmojis","_createClass","returnSectionData","_this2","_this$state","emojiData","largeList","forEach","hasSearchQuery","filtered","display","short_names","includes","toLowerCase","shouldInclude","callback","Math","floor","columns","componentDidMount","_this$props","render","_this3","_this$props2","placeholder","showSearchBar","showSectionTitles","showTabs","_excluded2","_this$state2","Searchbar","styles","searchbar_container","search","clearButtonMode","returnKeyType","autoCorrect","underlineColorAndroid","onChangeText","title","frame","onLayout","tabBar","container","sectionHeader","contentContainerStyle","data","renderItem","horizontal","numColumns","keyboardShouldPersistTaps","ref","removeClippedSubviews","loader","size","OS","default","defaultProps","create","flexDirection","zIndex","backgroundColor","select","ios","paddingLeft","borderRadius","margin","flexWrap"],"sources":["C:/Users/frealem/Documents/chatfront/ChatAppClient/components/emojis/index.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  Platform,\r\n  ActivityIndicator,\r\n  FlatList\r\n} from \"react-native\";\r\nimport emoji from \"emoji-datasource\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nexport const Categories = {\r\n  all: {\r\n    symbol: null,\r\n    name: \"All\"\r\n  },\r\n  history: {\r\n    symbol: \"🕘\",\r\n    name: \"Recently used\"\r\n  },\r\n  emotion: {\r\n    symbol: \"😀\",\r\n    name: \"Smileys & Emotion\"\r\n  },\r\n  people: {\r\n    symbol: \"🧑\",\r\n    name: \"People & Body\"\r\n  },\r\n  nature: {\r\n    symbol: \"🦄\",\r\n    name: \"Animals & Nature\"\r\n  },\r\n  food: {\r\n    symbol: \"🍔\",\r\n    name: \"Food & Drink\"\r\n  },\r\n  activities: {\r\n    symbol: \"⚾️\",\r\n    name: \"Activities\"\r\n  },\r\n  places: {\r\n    symbol: \"✈️\",\r\n    name: \"Travel & Places\"\r\n  },\r\n  objects: {\r\n    symbol: \"💡\",\r\n    name: \"Objects\"\r\n  },\r\n  symbols: {\r\n    symbol: \"🔣\",\r\n    name: \"Symbols\"\r\n  },\r\n  flags: {\r\n    symbol: \"🏳️‍🌈\",\r\n    name: \"Flags\"\r\n  }\r\n};\r\n\r\nconst charFromUtf16 = utf16 =>\r\n  String.fromCodePoint(...utf16.split(\"-\").map(u => \"0x\" + u));\r\nexport const charFromEmojiObject = obj => charFromUtf16(obj.unified);\r\nconst filteredEmojis = emoji.filter(e => !e[\"obsoleted_by\"]);\r\nconst emojiByCategory = category =>\r\n  filteredEmojis.filter(e => e.category === category);\r\nconst sortEmoji = list => list.sort((a, b) => a.sort_order - b.sort_order);\r\nconst categoryKeys = Object.keys(Categories);\r\n\r\nconst TabBar = ({ theme, activeCategory, onPress, width }) => {\r\n  const tabSize = width / categoryKeys.length;\r\n\r\n  return categoryKeys.map(c => {\r\n    const category = Categories[c];\r\n    if (c !== \"all\")\r\n      return (\r\n        <TouchableOpacity\r\n          key={category.name}\r\n          onPress={() => onPress(category)}\r\n          style={{\r\n            flex: 1,\r\n            height: tabSize,\r\n            borderColor: category === activeCategory ? theme : \"#EEEEEE\",\r\n            borderBottomWidth: 2,\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\"\r\n          }}\r\n        >\r\n          <Text\r\n            style={{\r\n              textAlign: \"center\",\r\n              paddingBottom: 8,\r\n              fontSize: tabSize - 24\r\n            }}\r\n          >\r\n            {category.symbol}\r\n          </Text>\r\n        </TouchableOpacity>\r\n      );\r\n  });\r\n};\r\n\r\nconst EmojiCell = ({ emoji, colSize, ...other }) => (\r\n  <TouchableOpacity\r\n    activeOpacity={0.5}\r\n    style={{\r\n      width: colSize,\r\n      height: colSize,\r\n      alignItems: \"center\",\r\n      justifyContent: \"center\"\r\n    }}\r\n    {...other}\r\n  >\r\n    <Text style={{ color: \"#FFFFFF\", fontSize: colSize - 12 }}>\r\n      {charFromEmojiObject(emoji)}\r\n    </Text>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst storage_key = \"@react-native-emoji-selector:HISTORY\";\r\nexport default class EmojiSelector extends Component {\r\n  state = {\r\n    searchQuery: \"\",\r\n    category: Categories.people,\r\n    isReady: false,\r\n    history: [],\r\n    emojiList: null,\r\n    colSize: 0,\r\n    width: 0\r\n  };\r\n\r\n  //\r\n  //  HANDLER METHODS\r\n  //\r\n  handleTabSelect = category => {\r\n    if (this.state.isReady) {\r\n      if (this.scrollview)\r\n        this.scrollview.scrollToOffset({ x: 0, y: 0, animated: false });\r\n      this.setState({\r\n        searchQuery: \"\",\r\n        category\r\n      });\r\n    }\r\n  };\r\n\r\n  handleEmojiSelect = emoji => {\r\n    if (this.props.showHistory) {\r\n      this.addToHistoryAsync(emoji);\r\n    }\r\n    this.props.onEmojiSelected(charFromEmojiObject(emoji));\r\n  };\r\n\r\n  handleSearch = searchQuery => {\r\n    this.setState({ searchQuery });\r\n  };\r\n\r\n  addToHistoryAsync = async emoji => {\r\n    let history = await AsyncStorage.getItem(storage_key);\r\n\r\n    let value = [];\r\n    if (!history) {\r\n      // no history\r\n      let record = Object.assign({}, emoji, { count: 1 });\r\n      value.push(record);\r\n    } else {\r\n      let json = JSON.parse(history);\r\n      if (json.filter(r => r.unified === emoji.unified).length > 0) {\r\n        value = json;\r\n      } else {\r\n        let record = Object.assign({}, emoji, { count: 1 });\r\n        value = [record, ...json];\r\n      }\r\n    }\r\n\r\n    AsyncStorage.setItem(storage_key, JSON.stringify(value));\r\n    this.setState({\r\n      history: value\r\n    });\r\n  };\r\n\r\n  loadHistoryAsync = async () => {\r\n    let result = await AsyncStorage.getItem(storage_key);\r\n    if (result) {\r\n      let history = JSON.parse(result);\r\n      this.setState({ history });\r\n    }\r\n  };\r\n\r\n  //\r\n  //  RENDER METHODS\r\n  //\r\n  renderEmojiCell = ({ item }) => (\r\n    <EmojiCell\r\n      key={item.key}\r\n      emoji={item.emoji}\r\n      onPress={() => this.handleEmojiSelect(item.emoji)}\r\n      colSize={this.state.colSize}\r\n    />\r\n  );\r\n\r\n  returnSectionData() {\r\n    const { history, emojiList, searchQuery, category } = this.state;\r\n    let emojiData = (function() {\r\n        if (category === Categories.all && searchQuery === \"\") {\r\n        //TODO: OPTIMIZE THIS\r\n        let largeList = [];\r\n        categoryKeys.forEach(c => {\r\n          const name = Categories[c].name;\r\n          const list =\r\n            name === Categories.history.name ? history : emojiList[name];\r\n          if (c !== \"all\" && c !== \"history\") largeList = largeList.concat(list);\r\n        });\r\n\r\n        return largeList.map(emoji => ({ key: emoji.unified, emoji }));\r\n      } else {\r\n        let list;\r\n        const hasSearchQuery = searchQuery !== \"\";\r\n        const name = category.name;\r\n        if (hasSearchQuery) {\r\n          const filtered = emoji.filter(e => {\r\n            let display = false;\r\n            e.short_names.forEach(name => {\r\n              if (name.includes(searchQuery.toLowerCase())) display = true;\r\n            });\r\n            return display;\r\n          });\r\n          list = sortEmoji(filtered);\r\n        } else if (name === Categories.history.name) {\r\n          list = history;\r\n        } else {\r\n          list = emojiList[name];\r\n        }\r\n        return list.map(emoji => ({ key: emoji.unified, emoji }));\r\n      }\r\n    })()\r\n    return this.props.shouldInclude ? emojiData.filter(e => this.props.shouldInclude(e.emoji)) : emojiData\r\n  }\r\n\r\n  prerenderEmojis(callback) {\r\n    let emojiList = {};\r\n    categoryKeys.forEach(c => {\r\n      let name = Categories[c].name;\r\n      emojiList[name] = sortEmoji(emojiByCategory(name));\r\n    });\r\n\r\n    this.setState(\r\n      {\r\n        emojiList,\r\n        colSize: Math.floor(this.state.width / this.props.columns)\r\n      },\r\n      callback\r\n    );\r\n  }\r\n\r\n  handleLayout = ({ nativeEvent: { layout } }) => {\r\n    this.setState({ width: layout.width }, () => {\r\n      this.prerenderEmojis(() => {\r\n        this.setState({ isReady: true });\r\n      });\r\n    });\r\n  };\r\n\r\n  //\r\n  //  LIFECYCLE METHODS\r\n  //\r\n  componentDidMount() {\r\n    const { category, showHistory } = this.props;\r\n    this.setState({ category });\r\n\r\n    if (showHistory) {\r\n      this.loadHistoryAsync();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      theme,\r\n      columns,\r\n      placeholder,\r\n      showHistory,\r\n      showSearchBar,\r\n      showSectionTitles,\r\n      showTabs,\r\n      ...other\r\n    } = this.props;\r\n\r\n    const { category, colSize, isReady, searchQuery } = this.state;\r\n\r\n    const Searchbar = (\r\n      <View style={styles.searchbar_container}>\r\n        <TextInput\r\n          style={styles.search}\r\n          placeholder={placeholder}\r\n          clearButtonMode=\"always\"\r\n          returnKeyType=\"done\"\r\n          autoCorrect={false}\r\n          underlineColorAndroid={theme}\r\n          value={searchQuery}\r\n          onChangeText={this.handleSearch}\r\n        />\r\n      </View>\r\n    );\r\n\r\n    const title = searchQuery !== \"\" ? \"Search Results\" : category.name;\r\n\r\n    return (\r\n      <View style={styles.frame} {...other} onLayout={this.handleLayout}>\r\n        <View style={styles.tabBar}>\r\n          {showTabs && (\r\n            <TabBar\r\n              activeCategory={category}\r\n              onPress={this.handleTabSelect}\r\n              theme={theme}\r\n              width={this.state.width}\r\n            />\r\n          )}\r\n        </View>\r\n        <View style={{ flex: 1 }}>\r\n          {showSearchBar && Searchbar}\r\n          {isReady ? (\r\n            <View style={{ flex: 1 }}>\r\n              <View style={styles.container}>\r\n                {showSectionTitles && (\r\n                  <Text style={styles.sectionHeader}>{title}</Text>\r\n                )}\r\n                <FlatList\r\n                  style={styles.scrollview}\r\n                  contentContainerStyle={{ paddingBottom: colSize }}\r\n                  data={this.returnSectionData()}\r\n                  renderItem={this.renderEmojiCell}\r\n                  horizontal={false}\r\n                  numColumns={columns}\r\n                  keyboardShouldPersistTaps={\"always\"}\r\n                  ref={scrollview => (this.scrollview = scrollview)}\r\n                  removeClippedSubviews\r\n                />\r\n              </View>\r\n            </View>\r\n          ) : (\r\n            <View style={styles.loader} {...other}>\r\n              <ActivityIndicator\r\n                size={\"large\"}\r\n                color={Platform.OS === \"android\" ? theme : \"#000000\"}\r\n              />\r\n            </View>\r\n          )}\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nEmojiSelector.defaultProps = {\r\n  theme: \"#007AFF\",\r\n  category: Categories.all,\r\n  showTabs: true,\r\n  showSearchBar: true,\r\n  showHistory: false,\r\n  showSectionTitles: true,\r\n  columns: 6,\r\n  placeholder: \"Search...\"\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  frame: {\r\n    flex: 1,\r\n    width: \"100%\"\r\n  },\r\n  loader: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\"\r\n  },\r\n  tabBar: {\r\n    flexDirection: \"row\"\r\n  },\r\n  scrollview: {\r\n    flex: 1\r\n  },\r\n  searchbar_container: {\r\n    width: \"100%\",\r\n    zIndex: 1,\r\n    backgroundColor: \"rgba(255,255,255,0.75)\"\r\n  },\r\n  search: {\r\n    ...Platform.select({\r\n      ios: {\r\n        height: 36,\r\n        paddingLeft: 8,\r\n        borderRadius: 10,\r\n        backgroundColor: \"#E5E8E9\"\r\n      }\r\n    }),\r\n    margin: 8\r\n  },\r\n  container: {\r\n    flex: 1,\r\n    flexWrap: \"wrap\",\r\n    flexDirection: \"row\",\r\n    alignItems: \"flex-start\"\r\n  },\r\n  sectionHeader: {\r\n    margin: 8,\r\n    fontSize: 17,\r\n    width: \"100%\",\r\n    color: \"#8F8F8F\"\r\n  }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}