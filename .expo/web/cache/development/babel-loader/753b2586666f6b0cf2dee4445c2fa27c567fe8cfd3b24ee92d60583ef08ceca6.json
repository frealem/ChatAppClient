{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React, { useState, useEffect } from 'react';\nimport tw from 'twrnc';\nimport { COLORS } from \"../../theme/theme\";\nimport { Ionicons } from '@expo/vector-icons';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SenderMessage = function SenderMessage(_ref) {\n  var message = _ref.message,\n    messageHandler = _ref.messageHandler;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    messageId = _useState2[0],\n    setMessageId = _useState2[1];\n  var screenWidth = Dimensions.get('window').width;\n  var containerWidth = screenWidth * 0.7;\n  useEffect(function () {\n    var id = message.id;\n    setMessageId(id);\n  }, []);\n  return _jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      return messageHandler(messageId);\n    },\n    children: _jsxs(View, {\n      style: [tw` px-5 py-3 mx-3 my-2 ml-14`, styles.textContainer, {\n        maxWidth: containerWidth\n      }],\n      children: [_jsx(Text, {\n        style: styles.text,\n        children: message.text\n      }), _jsx(View, {\n        style: styles.statusContainer,\n        children: !message.seen && _jsx(Ionicons, {\n          name: \"checkmark\",\n          size: 16,\n          color: 'black'\n        }) || message.seen && _jsx(Ionicons, {\n          name: \"checkmark-done\",\n          size: 16,\n          color: 'black'\n        })\n      })]\n    })\n  });\n};\nexport default SenderMessage;\nvar styles = StyleSheet.create({\n  textContainer: {\n    backgroundColor: COLORS.primaryBlue,\n    padding: 10,\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 10,\n    borderTopRightRadius: 10,\n    alignSelf: 'flex-end'\n  },\n  text: {\n    flexWrap: 'wrap',\n    color: 'white'\n  },\n  statusContainer: {\n    flexDirection: 'row',\n    alignSelf: 'flex-end'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","tw","COLORS","Ionicons","jsx","_jsx","jsxs","_jsxs","SenderMessage","_ref","message","messageHandler","_useState","_useState2","_slicedToArray","messageId","setMessageId","screenWidth","Dimensions","get","width","containerWidth","id","TouchableOpacity","onPress","children","View","style","styles","textContainer","maxWidth","Text","text","statusContainer","seen","name","size","color","StyleSheet","create","backgroundColor","primaryBlue","padding","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","alignSelf","flexWrap","flexDirection"],"sources":["C:/Users/frealem/Documents/chatfront/ChatAppClient/components/message/SenderMeassage.js"],"sourcesContent":["import { Image, StyleSheet, Text, View, Dimensions,TouchableOpacity } from 'react-native'\r\nimport React,{useState, useEffect} from  'react'\r\nimport tw from 'twrnc';\r\nimport { COLORS } from '../../theme/theme';\r\nimport {Ionicons} from '@expo/vector-icons'\r\nconst SenderMessage = ({message,messageHandler}) => {\r\n  const [messageId, setMessageId ] = useState(\"\");\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const containerWidth = screenWidth * 0.7;\r\n  useEffect(()=>{\r\n    const id = message.id;\r\n    setMessageId(id);\r\n  },[])\r\n  return (\r\n    <TouchableOpacity onPress={() => messageHandler(messageId)}>\r\n      <View style={[tw` px-5 py-3 mx-3 my-2 ml-14`,styles.textContainer, {maxWidth: containerWidth}]}>\r\n      <Text style={styles.text}>{message.text}</Text>\r\n      <View style={styles.statusContainer}>\r\n      {(!message.seen && <Ionicons name='checkmark' size={16} color={'black'}/>) ||\r\n      message.seen && <Ionicons name='checkmark-done' size={16} color={'black'}/>}\r\n      </View>   \r\n      </View>\r\n    </TouchableOpacity>\r\n    \r\n  )\r\n}\r\n\r\nexport default SenderMessage\r\n\r\nconst styles = StyleSheet.create({\r\n  textContainer: {\r\n    backgroundColor: COLORS.primaryBlue,\r\n    padding: 10,\r\n    borderTopLeftRadius: 10,\r\n    borderBottomLeftRadius: 10,\r\n    borderTopRightRadius: 10,\r\n    alignSelf: 'flex-end'\r\n  },\r\n  text: {\r\n    flexWrap: 'wrap',\r\n    color: 'white',\r\n  },\r\n  statusContainer: {\r\n    flexDirection: 'row',\r\n    alignSelf: 'flex-end'\r\n  }\r\n})"],"mappings":";;;;;;;AACA,OAAOA,KAAK,IAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAOC,EAAE,MAAM,OAAO;AACtB,SAASC,MAAM;AACf,SAAQC,QAAQ,QAAO,oBAAoB;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAC3C,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAAiC;EAAA,IAA5BC,OAAO,GAAAD,IAAA,CAAPC,OAAO;IAACC,cAAc,GAAAF,IAAA,CAAdE,cAAc;EAC5C,IAAAC,SAAA,GAAmCb,QAAQ,CAAC,EAAE,CAAC;IAAAc,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAxCG,SAAS,GAAAF,UAAA;IAAEG,YAAY,GAAAH,UAAA;EAC9B,IAAMI,WAAW,GAAGC,UAAU,CAACC,GAAG,CAAC,QAAQ,CAAC,CAACC,KAAK;EAClD,IAAMC,cAAc,GAAGJ,WAAW,GAAG,GAAG;EACxCjB,SAAS,CAAC,YAAI;IACZ,IAAMsB,EAAE,GAAGZ,OAAO,CAACY,EAAE;IACrBN,YAAY,CAACM,EAAE,CAAC;EAClB,CAAC,EAAC,EAAE,CAAC;EACL,OACEjB,IAAA,CAACkB,gBAAgB;IAACC,OAAO,EAAE,SAAAA,QAAA;MAAA,OAAMb,cAAc,CAACI,SAAS,CAAC;IAAA,CAAC;IAAAU,QAAA,EACzDlB,KAAA,CAACmB,IAAI;MAACC,KAAK,EAAE,CAAC1B,EAAG,4BAA2B,EAAC2B,MAAM,CAACC,aAAa,EAAE;QAACC,QAAQ,EAAET;MAAc,CAAC,CAAE;MAAAI,QAAA,GAC/FpB,IAAA,CAAC0B,IAAI;QAACJ,KAAK,EAAEC,MAAM,CAACI,IAAK;QAAAP,QAAA,EAAEf,OAAO,CAACsB;MAAI,CAAO,CAAC,EAC/C3B,IAAA,CAACqB,IAAI;QAACC,KAAK,EAAEC,MAAM,CAACK,eAAgB;QAAAR,QAAA,EAClC,CAACf,OAAO,CAACwB,IAAI,IAAI7B,IAAA,CAACF,QAAQ;UAACgC,IAAI,EAAC,WAAW;UAACC,IAAI,EAAE,EAAG;UAACC,KAAK,EAAE;QAAQ,CAAC,CAAC,IACzE3B,OAAO,CAACwB,IAAI,IAAI7B,IAAA,CAACF,QAAQ;UAACgC,IAAI,EAAC,gBAAgB;UAACC,IAAI,EAAE,EAAG;UAACC,KAAK,EAAE;QAAQ,CAAC;MAAC,CACrE,CAAC;IAAA,CACD;EAAC,CACS,CAAC;AAGvB,CAAC;AAED,eAAe7B,aAAa;AAE5B,IAAMoB,MAAM,GAAGU,UAAU,CAACC,MAAM,CAAC;EAC/BV,aAAa,EAAE;IACbW,eAAe,EAAEtC,MAAM,CAACuC,WAAW;IACnCC,OAAO,EAAE,EAAE;IACXC,mBAAmB,EAAE,EAAE;IACvBC,sBAAsB,EAAE,EAAE;IAC1BC,oBAAoB,EAAE,EAAE;IACxBC,SAAS,EAAE;EACb,CAAC;EACDd,IAAI,EAAE;IACJe,QAAQ,EAAE,MAAM;IAChBV,KAAK,EAAE;EACT,CAAC;EACDJ,eAAe,EAAE;IACfe,aAAa,EAAE,KAAK;IACpBF,SAAS,EAAE;EACb;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}